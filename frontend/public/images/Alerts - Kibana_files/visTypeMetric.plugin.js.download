!function(e){var t={};function r(i){if(t[i])return t[i].exports;var s=t[i]={i:i,l:!1,exports:{}};return e[i].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.m=e,r.c=t,r.d=function(e,t,i){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)r.d(i,s,function(t){return e[t]}.bind(null,s));return i},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=14)}([function(e,t){e.exports=__kbnSharedDeps__.EmotionReact},function(e,t){e.exports=__kbnSharedDeps__.ElasticEui},function(e,t){e.exports=__kbnSharedDeps__.KbnI18n},function(e,t,r){r.r(t);var i=__kbnBundles__.get("plugin/charts/public");Object.defineProperties(t,Object.getOwnPropertyDescriptors(i))},function(e,t,r){r.r(t);var i=__kbnBundles__.get("plugin/expressions/public");Object.defineProperties(t,Object.getOwnPropertyDescriptors(i))},function(e,t){e.exports=__kbnSharedDeps__.React},function(e,t,r){r.r(t);var i=__kbnBundles__.get("plugin/visDefaultEditor/public");Object.defineProperties(t,Object.getOwnPropertyDescriptors(i))},function(e,t){e.exports=__kbnSharedDeps__.KbnI18nReact},function(e,t,r){r.r(t);var i=__kbnBundles__.get("plugin/data/public");Object.defineProperties(t,Object.getOwnPropertyDescriptors(i))},function(e,t,r){e.exports=r(16)(2)},function(e,t){e.exports=__kbnSharedDeps__.Lodash},function(e,t,r){r.r(t);var i=__kbnBundles__.get("plugin/visualizations/public");Object.defineProperties(t,Object.getOwnPropertyDescriptors(i))},function(e,t,r){r.r(t);var i=__kbnBundles__.get("plugin/expressions/common");Object.defineProperties(t,Object.getOwnPropertyDescriptors(i))},function(e,t,r){r.r(t);var i=__kbnBundles__.get("plugin/charts/common");Object.defineProperties(t,Object.getOwnPropertyDescriptors(i))},function(e,t,r){r(15),__kbnBundles__.define("plugin/visTypeMetric/public",r,17)},function(e,t,r){r.p=window.__kbnPublicPath__.visTypeMetric},function(e,t){e.exports=__kbnSharedDeps_npm__},function(e,t,r){"use strict";r.r(t),r.d(t,"plugin",(function(){return v}));var i=r(9),s=r.n(i),n=r(2),o=r(3),a=r(8),c=r(5),l=r.n(c),u=r(1),p=r(7),d=r(6),b=r(0);const g=[{id:o.ColorMode.None,label:n.i18n.translate("visTypeMetric.colorModes.noneOptionLabel",{defaultMessage:"None"})},{id:o.ColorMode.Labels,label:n.i18n.translate("visTypeMetric.colorModes.labelsOptionLabel",{defaultMessage:"Labels"})},{id:o.ColorMode.Background,label:n.i18n.translate("visTypeMetric.colorModes.backgroundOptionLabel",{defaultMessage:"Background"})}];function m({stateParams:e,setValue:t,setValidity:r,setTouched:i,uiState:s}){const a=Object(c.useCallback)(((r,i)=>t("metric",{...e.metric,[r]:i})),[t,e.metric]),m=Object(c.useCallback)(((t,r)=>a("labels",{...e.metric.labels,[t]:r})),[a,e.metric.labels]),f=Object(c.useCallback)(((t,r)=>a("style",{...e.metric.style,[t]:r})),[a,e.metric.style]),_=Object(c.useCallback)((e=>a("metricColorMode",e)),[a]),j=n.i18n.translate("visTypeMetric.params.color.useForLabel",{defaultMessage:"Use color for"});return Object(b.jsx)(l.a.Fragment,null,Object(b.jsx)(u.EuiPanel,{paddingSize:"s"},Object(b.jsx)(u.EuiTitle,{size:"xs"},Object(b.jsx)("h3",null,Object(b.jsx)(p.FormattedMessage,{id:"visTypeMetric.params.settingsTitle",defaultMessage:"Settings"}))),Object(b.jsx)(u.EuiSpacer,{size:"s"}),Object(b.jsx)(d.PercentageModeOption,{"data-test-subj":"metricPercentageMode",percentageMode:e.metric.percentageMode,formatPattern:e.metric.percentageFormatPattern,setValue:a}),Object(b.jsx)(d.SwitchOption,{label:n.i18n.translate("visTypeMetric.params.showTitleLabel",{defaultMessage:"Show title"}),paramName:"show",value:e.metric.labels.show,setValue:m})),Object(b.jsx)(u.EuiSpacer,{size:"s"}),Object(b.jsx)(u.EuiPanel,{paddingSize:"s"},Object(b.jsx)(u.EuiTitle,{size:"xs"},Object(b.jsx)("h3",null,Object(b.jsx)(p.FormattedMessage,{id:"visTypeMetric.params.rangesTitle",defaultMessage:"Ranges"}))),Object(b.jsx)(u.EuiSpacer,{size:"s"}),Object(b.jsx)(d.ColorRanges,{"data-test-subj":"metricColorRange",colorsRange:e.metric.colorsRange,setValue:a,setTouched:i,setValidity:r}),Object(b.jsx)(u.EuiFormRow,{fullWidth:!0,display:"rowCompressed",label:j},Object(b.jsx)(u.EuiButtonGroup,{buttonSize:"compressed",idSelected:e.metric.metricColorMode,isDisabled:1===e.metric.colorsRange.length,isFullWidth:!0,legend:j,options:g,onChange:_})),Object(b.jsx)(d.ColorSchemaOptions,{colorSchema:e.metric.colorSchema,colorSchemas:o.colorSchemas,disabled:1===e.metric.colorsRange.length||e.metric.metricColorMode===o.ColorMode.None,invertColors:e.metric.invertColors,setValue:a,showHelpText:!1,uiState:s})),Object(b.jsx)(u.EuiSpacer,{size:"s"}),Object(b.jsx)(u.EuiPanel,{paddingSize:"s"},Object(b.jsx)(u.EuiTitle,{size:"xs"},Object(b.jsx)("h3",null,Object(b.jsx)(p.FormattedMessage,{id:"visTypeMetric.params.style.styleTitle",defaultMessage:"Style"}))),Object(b.jsx)(u.EuiSpacer,{size:"s"}),Object(b.jsx)(d.RangeOption,{label:n.i18n.translate("visTypeMetric.params.style.fontSizeLabel",{defaultMessage:"Metric font size in points"}),min:12,max:120,paramName:"fontSize",value:e.metric.style.fontSize,setValue:f,showInput:!0,showLabels:!0,showValue:!1})))}var f=r(10),_=r(11),j=r(4),O=r(12),h=r(13);const M=e=>{const t=Object(j.buildExpressionFunction)("visdimension",{accessor:e.accessor});return e.format&&(t.addArgument("format",e.format.id),t.addArgument("formatParams",JSON.stringify(e.format.params))),Object(j.buildExpression)([t])},x=(e,t)=>{var r;const i=Object(_.getVisSchemas)(e,t),{percentageMode:s,percentageFormatPattern:n,colorSchema:a,metricColorMode:c,colorsRange:l,labels:u,invertColors:p,style:d}=e.params.metric;!0===Object(f.get)(e.params,"metric.percentageMode")&&i.metric.forEach((e=>{e.format={id:"percent",params:{pattern:n}}}));const b=l&&l.length>1,g=Object(j.buildExpressionFunction)("legacyMetricVis",{percentageMode:s,colorMode:b?c:o.ColorMode.None,showLabels:null!==(r=null==u?void 0:u.show)&&void 0!==r&&r});if(g.addArgument("font",Object(j.buildExpression)(`font family="${O.inter.value}"\n        weight="bold"\n        align="center"\n        sizeUnit="pt"\n        ${d?`size=${d.fontSize}`:""}`)),g.addArgument("labelFont",Object(j.buildExpression)('font size="14" align="center"')),l&&l.length){const e=((e,t,r=!1)=>e.reduce(((e,i,s,n)=>((s&&i.from!==n[s-1].to||0===s)&&(e.color.push("rgb(0, 0, 0, 0)"),e.stop.push(i.from)),e.color.push(((e,t,r,i=!1)=>{const s=Math.max(t-1,1),n=i?1-e/s:e/s;return Object(h.getHeatmapColors)(n,r)})(s,n.length,t,r)),e.stop.push(i.to),e)),{color:[],stop:[]}))(l,a,p),t=Object(j.buildExpressionFunction)("palette",{...e,range:"number",continuity:"none"});g.addArgument("palette",Object(j.buildExpression)([t]))}return i.group&&g.addArgument("bucket",M(i.group[0])),i.metric.forEach((e=>{g.addArgument("metric",M(e))})),Object(j.buildExpression)([g]).toAst()};class plugin_MetricVisPlugin{constructor(e){s()(this,"initializerContext",void 0),this.initializerContext=e}setup(e,{visualizations:t}){t.createBaseVisualization({name:"metric",title:n.i18n.translate("visTypeMetric.metricTitle",{defaultMessage:"Metric"}),icon:"visMetric",description:n.i18n.translate("visTypeMetric.metricDescription",{defaultMessage:"Show a calculation as a single number."}),fetchDatatable:!0,toExpressionAst:x,visConfig:{defaults:{addTooltip:!0,addLegend:!1,type:"metric",metric:{percentageMode:!1,useRanges:!1,colorSchema:o.ColorSchemas.GreenToRed,metricColorMode:o.ColorMode.None,colorsRange:[{from:0,to:1e4}],labels:{show:!0},invertColors:!1,style:{bgFill:"#000",bgColor:!1,labelColor:!1,subText:"",fontSize:60}}}},editorConfig:{enableDataViewChange:!0,optionsTemplate:m,schemas:[{group:a.AggGroupNames.Metrics,name:"metric",title:n.i18n.translate("visTypeMetric.schemas.metricTitle",{defaultMessage:"Metric"}),min:1,aggFilter:["!std_dev","!geo_centroid","!derivative","!serial_diff","!moving_avg","!cumulative_sum","!geo_bounds","!filtered_metric","!single_percentile","!single_percentile_rank"],aggSettings:{top_hits:{allowStrings:!0}},defaults:[{type:"count",schema:"metric"}]},{group:a.AggGroupNames.Buckets,name:"group",title:n.i18n.translate("visTypeMetric.schemas.splitGroupTitle",{defaultMessage:"Split group"}),min:0,max:1,aggFilter:["!geohash_grid","!geotile_grid","!filter","!sampler","!diversified_sampler","!rare_terms","!multi_terms","!significant_text"]}]},requiresSearch:!0})}start(e){}}function v(e){return new plugin_MetricVisPlugin(e)}}]);